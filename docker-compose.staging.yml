version: '3.8'

services:

  rabbitmq:
    image: rabbitmq:management
    expose:
      - 5672

  back-end:
    build: 
      context: ./back-end
      target: prod
    environment:
      DATABASE_URL: postgres://postgres:password@database:5432/postgres
      NODE_ENV: production
      SERVER_PORT: ${SERVER_PORT}
      RABBIT_AMQP_URL: ${RABBIT_AMQP_URL}
      NODEMAILER_USER: ${NODEMAILER_USER}
      NODEMAILER_PASS: ${NODEMAILER_PASS}
      FRONT_END_URL: ${FRONT_END_URL}
      RESET_PASSWORD_ROUTE: ${RESET_PASSWORD_ROUTE}
      ACCOUNT_CONFIRMATION_ROUTE: ${ACCOUNT_CONFIRMATION_ROUTE}
      RESET_EMAIL_ROUTE: ${RESET_EMAIL_ROUTE}
      REQUEST_TIMEOUT: ${REQUEST_TIMEOUT}
      RESET_PASSWORD_EXPIRATION_DELAY: ${RESET_PASSWORD_EXPIRATION_DELAY}
      NON_PREMIUM_MAX_AUTHORIZED_REQUESTS: ${NON_PREMIUM_MAX_AUTHORIZED_REQUESTS}
    expose:
      - 4000
    restart: always  
    depends_on:
      - database
      - rabbitmq

  web-app:
    build:
      context: ./web-app
      target: prod
    environment:
      REACT_APP_REQUEST_TIMEOUT: ${REQUEST_TIMEOUT}
      REACT_APP_RESET_PASSWORD_ROUTE: ${RESET_PASSWORD_ROUTE}
      REACT_APP_ACCOUNT_CONFIRMATION_ROUTE: ${ACCOUNT_CONFIRMATION_ROUTE}
      REACT_APP_RESET_EMAIL_ROUTE: ${RESET_EMAIL_ROUTE}
    volumes:
      - web-app-build:/app/build

  database:
    image: postgres:14.5-alpine
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - database-content:/var/lib/postgresql/data
    expose:
      - 5432
    restart: always

  gateway:
    image: nginx
    ports:
      - ${GATEWAY_PORT}:80
    depends_on:
      - back-end
      - web-app
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf
      - web-app-build:/web-app-build
    restart: always

  adminer:
    image: adminer
    restart: always
    ports:
      - 8082:8080

volumes:
  database-content:
  web-app-build: